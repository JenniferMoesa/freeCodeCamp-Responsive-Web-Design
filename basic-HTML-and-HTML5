SAY HELLO TO HTML ELEMENTS

Most HTML elements have an opening tag and a closing tag.

Opening tags look like this:

<h1>
Closing tags look like this:

</h1>

--------------------------------------------------------------------------------------------------------

HEADLINE WITH THE H2 ELEMENT

This element tells the browser about the structure of your website.
h1 elements are often used for main headings, while h2 elements are generally used for subheadings. 
There are also h3, h4, h5 and h6 elements to indicate different levels of subheadings.

<h2>CatPhotoApp</h2>

---------------------------------------------------------------------------------------------------------

INFORM WITH THE PARAGRAPH ELEMENT

p elements are the preferred element for paragraph text on websites. p is short for "paragraph".

You can create a paragraph element like this:

<p>Hello Paragraph.</p>

---------------------------------------------------------------------------------------------------------

FILL IN THE BLANK WITH PLACEHOLDER TEXT

Web developers traditionally use lorem ipsum text as placeholder text.
The lorem ipsum text is randomly scraped from a famous passage by Cicero of Ancient Rome.

Lorem ipsum text has been used as placeholder text by typesetters since the 16th century,
and this tradition continues on the web.

---------------------------------------------------------------------------------------------------------

UNCOMMENT HTML

Commenting is a way that you can leave comments for other developers within your code
without affecting the resulting output that is displayed to the end user.

Commenting is also a convenient way to make code inactive without having to delete it entirely.

Comments in HTML start with <!-- and end with a -->

Uncomment your h1, h2 and p elements.
<!--
<h1>Hello World</h1>

<h2>CatPhotoApp</h2>

<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot,
hairball run catnip eat the grass sniff.</p>
-->

---------------------------------------------------------------------------------------------------------------

COMMENT OUT HTML

Remember that in order to start a comment, you need to use <!-- and to end a comment, you need to use -->

Here you'll need to end the comment before your h2 element begins.

Comment out your h1 element and your p element, but not your h2 element.

<!--
<h1>Hello World</h1>
-->
<h2>CatPhotoApp</h2>

<!--
<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot,
hairball run catnip eat the grass sniff.</p>
-->

-----------------------------------------------------------------------------------------------------------------

DELETE HTML ELEMENTS

Our phone doesn't have much vertical space.

Let's remove the unnecessary elements so we can start building our CatPhotoApp.

Delete your h1 element so we can simplify our view.

<h1>Hello World</h1>

<h2>CatPhotoApp</h2>

<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot,
hairball run catnip eat the grass sniff.</p>

----------------------------------------------------------------------------------------------------------------------
INTRODUCTION TO HTML5 ELEMENTS

HTML5 introduces more descriptive HTML tags. These include main, header, footer, nav, video, article, section and others.

These tags give a descriptive structure to your HTML, make your HTML easier to read,
and help with Search Engine Optimization (SEO) and accessibility.
The main HTML5 tag helps search engines and other developers find the main content of your page.

Example usage, a main element with two child elements nested inside it:

<main> 
  <h1>Hello World</h1>
  <p>Hello Paragraph</p>
</main>
Note: Many of the new HTML5 tags and their benefits are covered in the Applied Accessibility section.

Create a second p element with the following kitty ipsum text: Purr jump eat the grass rip the couch scratched sunbathe,
shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.

Then, create a main element and nest only the two p elements inside the main element.

<h2>CatPhotoApp</h2>

<main>
  <p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot,
  hairball run catnip eat the grass sniff.</p>

  <p>Purr jump eat the grass rip the couch scratched sunbathe,
  shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p> 
</main>

--------------------------------------------------------------------------------------------------------------------------

ADD IMAGES TO YOUR WEBSITE

ou can add images to your website by using the img element, and point to a specific image's URL using the src attribute.

An example of this would be:
<img src="https://www.freecatphotoapp.com/your-image.jpg">

Note that img elements are self-closing. All img elements must have an alt attribute.
The text inside an alt attribute is used for screen readers to improve accessibility and is displayed if the image fails to load.

Note: If the image is purely decorative, using an empty alt attribute is a best practice.

Ideally the alt attribute should not contain special characters unless needed.
Let's add an alt attribute to our img example above:
<img src="https://www.freecatphotoapp.com/your-image.jpg" alt="A business cat wearing a necktie.">

---------------------------------------------------------------------------------------------------------------------------

LINK TO EXTERNAL PAGES WITH ANCHOR ELEMENTS

You can use a (anchor) elements to link to content outside of your web page.
a elements need a destination web address called an href attribute. They also need anchor text. Here's an example:
<a href="https://www.freecodecamp.org">this links to freecodecamp.org</a>

Then your browser will display the text this links to freecodecamp.org as a link you can click.
And that link will take you to the web address https://www.freecodecamp.org.

---------------------------------------------------------------------------------------------------------------------------

LINK TO INTERNAL SECTIONS OF A PAGE WITH ANCHOR ELEMENTS

a (anchor) elements can also be used to create internal links to jump to different sections within a webpage.

To create an internal link, you assign a link's href attribute to a hash symbol #
plus the value of the id attribute for the element that you want to internally link to, usually further down the page.
You then need to add the same id attribute to the element you are linking to. An id is an attribute that uniquely describes an element.

Below is an example of an internal anchor link and its target element:

<a href="#contacts-header">Contacts</a>
...
<h2 id="contacts-header">Contacts</h2>
When users click the Contacts link, they'll be taken to the section of the webpage with the Contacts header element.

Example:
<a href="#footer">jump to bottom</a>
...
<footer id="footer">Copyright Cat Photo App</footer>


-------------------------------------------------------------------------------------------------------------------------------

NEST AN ANCHOR ELEMENT WITHIN A PARAGRAPH

You can nest links within other text elements.

<p>
  Here's a <a target="_blank" href="https://www.freecodecamp.org"> link to www.freecodecamp.org</a> for you to follow.
</p>

Let's break down the example. Normal text is wrapped in the p element:

<p> Here's a ... for you to follow. </p>
Next is the anchor element <a> (which requires a closing tag </a>):

<a> ... </a>
target is an anchor tag attribute that specifies where to open the link. The value _blank specifies to open the link in a new tab.
The href is an anchor tag attribute that contains the URL address of the link:
<a href="https://www.freecodecamp.org" target="_blank"> ... </a>

The text, link to www.freecodecamp.org, within the a element is called anchor text, and will display the link to click:
<a href=" ... " target="...">link to freecodecamp.org</a>

The final output of the example will look like this:

Here's a (underlined ->) link to www.freecodecamp.org (<-underlined) for you to follow.

Example:
<p>View more 
  <a href="https://www.freecatphotoapp.com" target="_blank">cat photos</a>
</p>

-------------------------------------------------------------------------------------------------------------------------------------

MAKE DEAD LINKS USING THE HASH SYMBOL

Sometimes you want to add anchor elements to your website before you know where they will link.

This is also handy when you're changing the behavior of a link using JavaScript, which we'll learn about later.

Example:
<p>Click here to view more <a href="#" target="_blank">cat photos</a>.</p>

--------------------------------------------------------------------------------------------------------------------------------------

TURN AN IMAGE INTO A LINK

You can make elements into links by nesting them within an a element.

Nest your image within an anchor element. Here's an example:
<a href="#"><img src="https://www.bit.ly/fcc-running-cats" alt="Three kittens running towards the camera."></a>

---------------------------------------------------------------------------------------------------------------------------------

CREATE A BULLETED UNORDERED LIST
HTML has a special element for creating unordered lists, or bullet point style lists.

Unordered lists start with an opening <ul> element, followed by any number of <li> elements.
Finally, unordered lists close with a </ul>.

For example:

<ul>
  <li>apples</li>
  <li>oranges</li>
</ul>

-------------------------------------------------------------------------------------------------------------------------------

CREATE AN ORDERED LIST

HTML has another special element for creating ordered lists, or numbered lists.

Ordered lists start with an opening <ol> element, followed by any number of <li> elements. Finally, ordered lists are closed with the </ol> tag.

For example:

<ol>
  <li>Garfield</li>
  <li>Sylvester</li>
</ol>
would create a numbered list of Garfield and Sylvester.

excercise:
Create an ordered list of the top 3 things cats hate the most.

<h2>CatPhotoApp</h2>
<main>
  <p>Click here to view more <a href="#">cat photos</a>.</p>

  <a href="#"><img src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg" alt="A cute orange cat lying on its back."></a>

  <p>Things cats love:</p>
  <ul>
    <li>cat nip</li>
    <li>laser pointers</li>
    <li>lasagna</li>
  </ul>
  <p>Top 3 things cats hate:</p>
  <ol>
    <li>water</li>
    <li>noise</li>
    <li>cold weather</li>
  </ol>

</main>

-------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE A TEXT FIELD

Now let's create a web form.

input elements are a convenient way to get input from your user.

You can create a text input like this:

<input type="text">
Note that input elements are self-closing.

excercise:
Create an input element of type text below your lists.

<input type="text">

--------------------------------------------------------------------------------------------------
